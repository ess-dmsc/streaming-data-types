file_identifier "ns11";

table Bool   { value:  bool;   }
table Long   { value:  long;   }
table Double { value:  double; }
table String { value:  string; }
table Object { value:  string; } // Python object represented as string

// Specific 1-D arrays for simple value types to enable easier serialisation
// and deserialisation. Also, the numeric types get numpy support for free.
table ArrayBool    { contents: [bool];    }
table ArrayLong    { contents: [long];    }
table ArrayDouble  { contents: [double];  }
table ArrayString  { contents: [string];  }
table ArrayObject  { contents: [string];  }

union ValueType {
    Object,
    Bool,
    Long,
    Double,
    String,
    Dict,
    Array,
    ArrayBool,
    ArrayLong,
    ArrayDouble,
    ArrayString,
    ArrayObject
}

table DictMapping {
        key: ValueType;
        value: ValueType;
}

table Dict { value: [DictMapping]; }

table ArrayElement { value: ValueType; }

// Approximately equivalent to a Python list, e.g. hetrogeneous, allows arrays within arrays, etc.
// For simple homogeneous 1-D arrays use one of the specific arrays types
// such as ArrayDouble, ArrayString, etc.
table Array {
        contents: [ArrayElement];
}

// Approximately equivalent to a Python set.
// Can be hetrogeneous
table Set {
        contents: [ArrayElement];
}

// Approximately equivalent to a Python tuple.
// Can be hetrogeneous
table Tuples {
        contents: [ArrayElement];
}

/// pylint: skip-file
table TypedCacheEntry {
        key: string;            // key for this entry (usually nicos/device/parameter)
        time: double;           // time (in seconds after epoch) when this entry was set
        ttl: double;            // time to live (in seconds after time field of this entry). NOT TO BE USED OUTSIDE OF NICOS!
        expired: bool = false;  // already expired (manually or using ttl), supersedes ttl. NOT TO BE USED OUTSIDE OF NICOS!
        value: ValueType;
}

root_type TypedCacheEntry;
